name: Main workflow

on:
  - pull_request
  - push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - 4.14.0
          - 4.08.0
        concurrency:
          - async
          - lwt

    runs-on: ${{ matrix.os }}

    env:
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin

    services:
      minio:
        image: fclairamb/minio-github-actions
        ports:
          - 9000:9000

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Minio
        run: |
          mkdir ~/.aws
          echo '[default]' > ~/.aws/credentials
          echo 'aws_access_key_id = minioadmin' >> ~/.aws/credentials
          echo 'aws_secret_access_key = minioadmin' >> ~/.aws/credentials
          pip3 install minio
          python3 - <<'EOF'
          from minio import Minio
          minio = Minio(
             'localhost:9000',
             access_key='minioadmin',
             secret_key='minioadmin',
             secure=False
          )
          minio.make_bucket('bucket-${{ matrix.concurrency }}')
          EOF

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: avsm/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - run: opam pin . --no-action
      - run: opam depext aws-s3 aws-s3-${{ matrix.concurrency }} --yes --with-doc --with-test
      - run: opam install aws-s3 aws-s3-${{ matrix.concurrency }} --deps-only --with-doc --with-test
      - run: opam exec -- dune build aws-s3 aws-s3-${{ matrix.concurrency }}
      - run: opam exec -- dune runtest aws-s3 aws-s3-${{ matrix.concurrency }}

      - run: ./integration.sh -t ${{ matrix.concurrency }} -b bucket-${{ matrix.concurrency }} -m 127.0.0.1:9000
